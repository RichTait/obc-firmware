#!/usr/bin/env bash

source_dir="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
cd $source_dir

opt_quiet=false
opt_verbose=false
opt_sound=false

COLOUR_GREEN='\033[0;32m'
COLOUR_YELLOW='\033[1;33m'
COLOUR_PURPLE='\033[0;35m'
COLOUR_RED='\033[0;31m'
COLOUR_OFF='\033[0;00m'
CLEAR_LINE='\033[2K'

_ERROR_="$COLOUR_RED[ERROR]$COLOUR_OFF"
_INFO_="$COLOUR_PURPLE[INFO]$COLOUR_OFF"
_DEBUG_="$COLOUR_YELLOW[DEBUG]$COLOUR_OFF"

stdin="/proc/$$/fd/0"
stdout="/proc/$$/fd/1"
stderr="/proc/$$/fd/2"
stdnull="/dev/null"

usage() {
    echo "Usage: build <platform> <main> <args...>" >&2
}

print() {
    if ! $opt_quiet
    then
        echo -e $@ >&$stdout
    fi
}
print_err() {
    if ! $opt_quiet
    then
        echo -e $@ >&$stderr
    fi
}

hyphenjoin() {
    str=""
    while [ $# -gt 0 ]
    do
      str="$str$1-"
      shift
    done
    if [ ! -z "$str" ]
    then
      str="${str::-1}"
    fi
    echo "$str"
  }



platform=${1,,}
shift

main=${1,,}
shift

if [ -z "$platform" ]; then
    print_err "$_ERROR_ A platform must be specified"
    usage
    exit 1
fi
if [ ! -d "src/platform/${platform}" ]; then
    print_err "$_ERROR_ Platform \"${platform}\" not found"
    exit 2
fi

tm4c_dir="src/platform/tm4c/TivaWare_C_Series-2.1.4.178"
tm4c_driver="src/platform/tm4c/TivaWare_C_Series-2.1.4.178/driverlib/gcc/libdriver.a"
if [ ${platform} == "tm4c" ]; then
  if [ ! -d "${tm4c_dir}" ]; then
    print_err "$_ERROR_ TM4C Drivers not found! Please download these from TI following README.md"
    exit 2
  fi
  if [ ! -e "${tm4c_driver}" ]; then
    print_err "$_ERROR_ TM4C Drivers not compiled!"
    print "Compiling now - please wait.. (the firmware will be built when this is complete)"
    cd ${tm4c_dir}/driverlib
    make &>/dev/null \
    || print "$_ERROR_ There were errors in building the TI Drivers :("
    cd ${source_dir}
  fi
fi

if [ -z "$main" ]; then
    print_err "$_ERROR_ A main file must be specified"
    usage
    exit 3
fi
if [ ! -e "src/main/$main.c" ]; then
    print_err "$_ERROR_ Main File \"$main\" not found"
    exit 4
fi

defines="-D PLATFORM=${platform^^} -D MAIN=${main}"
githash="$(git describe --dirty --always)"

outdir="builds"
filename="$(hyphenjoin uos3 $platform $main $flags $githash)"

cd "src/platform/$platform"
make OUTDIR="$outdir" OUTFILE="$filename" clean \
&& make DEFINES="$defines" OUTDIR="$outdir" OUTFILE="$filename" MAIN="$main" PLATFORM="$platform" \
&& print "$_INFO_ Built: ${outdir}/${filename}" \
|| print "$_ERROR_ There were errors in the build process"
